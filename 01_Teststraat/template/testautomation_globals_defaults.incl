#!/bin/bash
#################################
OS_type=[ENTER_VALUE]															# Either "windows" or "linux"
root=[ENTER_VALUE]																# root of the performancetest-runner repository, example: "E:/Test/performancetest-runner"

testautomation_root="$root/01_Teststraat"										# Root of the testautomation

scripts_root="$root/02_Scripts"													# Root location of the scripts, should contain a subfolder for each project
scriptfolder="$scripts_root/$project"											# Actual scriptfolder location

result_root="$root/03_Resultaten"												# Root directory of the results, a directory per project will be created here
logdir_root="$result_root/$project"												# Root location where all the files for the test and the results are stored
loadtest_report="$logdir_root/report"											# Location of the generated report										
loadtest_measures="$logdir_root/measures"										# Location of the gathered measures of a test
loadtest_logdir="$logdir_root/testresults"										# Location of the performance test results
verification_logdir="$logdir_root/verification_testresults"						# Location of the testresults of the verification run
reporttemplatedestinationfolder="$logdir_root/report_templates"					# Location where the templates of the report are stored

resultsbackup_root="$root/04_Resultaten_Backup"									# Root folder of the results backup. A directory per project will be created here
logbackupdir="$resultsbackup_root/$project"										# Location where the backup for the testresults are stored

reportsfolder_root="$root/05_Rapporten"											# Directory where the report is placed 

tools_root="$root/06_Tools"														# Root directory of the tools like the reporttool and reporttemplategenerator
loadgendir_jmeter="$tools_root" 												# Often the same as general Tools root but can be changed, this should point to location where the JMeter folder can be found
reporttoolfolder="$tools_root/ReportTool"										# Location of the ReportTool
reporttemplategenerator_root="$tools_root/ReportTemplateGenerator"				# Location of the ReportTemplateGenerator

BuildlogLocation="$root/07_Buildlog/Buildlog.txt"								# Location of the buildlog, stores start and stop times of a test
projectfolder_root="$root/09_ProjectFolders"									# Root directory for the project specific folders
reporthistory_root="$root/10_ReportHistory"										# Directory where History of reports can be build up	

generatereporthistory="true"													# Set to true if you want to build a report history locally
reportpublishfolder="$reporthistory_root/$project/$workload"					# If the generatereporthistory is set to true, a report with timestamp will be placed in this location

spaceHashTableValues=[ENTER_VALUE]												# Windows variant size should be in MB, example: "(["C"]="5000" ["/var/log"]="10000")"
spaceHashTableValuesWarning=[ENTER_VALUE]										# Windows variant size should be in MB, example: "(["C"]="6000" ["var/log"]="8000")"

backupsToKeep=28																# old var
maxbackfoldersnorm=28															# number of backup folders to keep for normal production load
maxbackfoldersstressduur=16														# number of backup folders for keep for stress and duur load 
	
movelogs="true"																	# Should the logs be moved to the backup folder
move_report="true"																# Should the report be moved to backup and publish folder

#################################
# Reporting
#################################
companylogoreference=[ENTER_VALUE]												# reference to compony logo inserted in report, example: "<url location to logo>"
reportdbconnectstring=[ENTER_VALUE]												# reference to rptgen database, to configure different port, use <hostname>:<port>:<username>:<password>								#reference to compony logo inserted in report

#################################
# Project variables?
######################
checkforarguments="true" 														# Check if incomming arguments are correct (should be on by default)
printoptions="false"	 														# Print the settings variables
checkdiskspace="true"															# Check for available diskspace, if thresholds are exceeded, abort the test
abortifverifyfailed="true"														# Abort the test if the verification run had errors (should be on by default)
runmaintest="true"																# Run main test
generatereport="true"															# Generate a report
run_posttest="true" 															# Enable in order to do project specific things after a test
project_specific_checks="true"													# Do project specific checks (should be on by default)
get_project_specific_parameters="true"											# Get project specific parameters like application version
kill_project_tool="true"														# Kill the tool before running a test (should be on)
rebuild_directories="true"														# Rebuilds directories after cleaning the log folder
removescriptfolder="false"														# 
removelogfolders="true"															# Clean the logfolder of this project
create_run_log="true"															# Write the start and end time in the buildlog
cleanbackupfolder="true"														# Should backup folder be cleaned (only keep x amount of folders)
######################
Vworkload="Verificatie"															# Default name of the Verification workload
#################################
#Max run time in seconds	
threshold_Verificatie=900														# Default timeout for the verification run
threshold_productie=4000														# Default timeout for the performancetest run
threshold_duurtest=25200														# Default timeout for the endurancetest run
threshold_stresstest=4000														# Default timeout for when a custom workload is run
threshold_default=4000
#################################	
getfromrepository="false"														# Should the scripts be pulled from a repository
committorepository="true"														# If the report should be pushed to a repository
revision_control_tool=GIT														# Which revision control tool is used
repository_log_drive="E:"														# Drive of the local repository
repository_report_dir="$reportsfolder_root/$project"							# Location of the local repository
giturl="[ENTER_VALUE]"															# Remote URL for the GIT repository example: http://username:password@gitlab.performance.company/$project/$workload.git
#################################
# Dummyline for sed
