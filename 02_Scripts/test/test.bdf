// ----------------------------------------------------------------------
// Generated 27-2-2018 from 'test.spcap'
// by Silk Performer Recorder v17.0.0.7090 HF3
// ----------------------------------------------------------------------
//  * Rule "Excluding browser-specific domains"
// Excluding proprietary TCP/IP traffic
// Rule set "ASP.NET ViewState"
//  * Rule "Parse and Replace __VIEWSTATE"
//  * Rule "Parse and Replace __EVENTVALIDATION"
// ----------------------------------------------------------------------

@codepage(1252)

benchmark SilkPerformerRecorder

use "WebAPI.bdh"

dcluser
  user
    VUser
  transactions
    TInit            : begin;
    Test_01_transaction : 1;
    TPauze                : 1;
    Test_01_transaction : 1;
    TPacing               : 1;
    TVerification    : 1;

var
  ErrorFlag          : boolean; 
  sPacing            : float; 
  rtime              : float;
  Workloadname       : string;
  nVerifyHtmlResult1 : number;

dclrand

dcltrans
  transaction TInit
  begin
    WebSetBrowser(WEB_BROWSER_MSIE11);
    WebModifyHttpHeader("Accept-Language", "nl-NL");
  end TInit;

  transaction Test_01_transaction
  var
  begin
    if ErrorFlag then return 1; end;
    WebVerifyHtml("Connectietest", 1, WEB_FLAG_IGNORE_WHITE_SPACE | WEB_FLAG_EQUAL | WEB_FLAG_CASE_SENSITIVE, NULL, SEVERITY_ERROR, nVerifyHtmlResult1);
    WebUrl("http://members.zinders.nl/maila10001/0332.txt");
  end Test_01_transaction;

  //=======================================================================  
  transaction TPacing
  begin
    MeasureStop("Overall Iteration Time");
    MeasureGet("Overall Iteration Time", MEASURE_TIMER_RESPONSETIME, MEASURE_KIND_LAST, rtime);
        
    sPacing := 30.0 - rtime; 
      if sPacing > 0.0 then
        thinktime(sPacing);
      end;
    ErrorFlag := false;
      
  end TPacing;
  //=======================================================================
  
  //=======================================================================
  transaction TPauze
  begin
    Thinktime(2.0);
  end TPauze;
  //=======================================================================

  //=======================================================================
	transaction TVerification 
  begin
    
    Workloadname:= GetWorkload(); 
    if workloadname = "Verificatie" 
      then halt 
    end;
  end TVerification;
  //=======================================================================

  //=======================================================================
  dclevent
    handler OnError <EVENT_RAISE_ERROR>
    begin
      ErrorFlag := true;
      RaiseError(0, "Er is een fout opgetreden. Error message = " +GetErrorMsg(GetLastError()), SEVERITY_ERROR );
    end OnError;
  //=======================================================================
